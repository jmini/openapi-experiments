openapi: 3.0.1
info:
  description: Example spec
  title: OpenAPI Tree Pots
  version: 1.0.0
servers:
- url: http://api.company.xyz/v2
paths:
  /case1:
    get:
      operationId: getCase1
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWithBoolean'
          description: Ok
      summary: Update an existing pet
      tags:
      - lorem
      x-tags:
      - tag: lorem
  /issue7754:
    get:
      operationId: issue7754
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongModel'
          description: Ok
      summary: Codegen
      tags:
      - lorem
      x-tags:
      - tag: lorem
  /pull66:
    get:
      operationId: pull66
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumInArrayOfArray'
      responses:
        200:
          description: Ok
      tags:
      - lorem
      x-tags:
      - tag: lorem
  /pull75:
    get:
      operationId: op75
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjWithEnums'
          description: Ok
      tags:
      - lorem
      x-tags:
      - tag: lorem
  /ipsum/issue199:
    get:
      operationId: op199
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SomeObject'
          description: a pet to be returned
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unexpected error
      tags:
      - ipsum
      x-tags:
      - tag: ipsum
  /pull708:
    get:
      operationId: op708
      parameters:
      - explode: true
        in: query
        name: bar
        required: false
        schema:
          default: foobar
          type: string
        style: form
      responses:
        default:
          description: successful operation
      tags:
      - lorem
      x-tags:
      - tag: lorem
  /polymorphic:
    get:
      operationId: getPolymorphic
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SomeObject'
          description: a pet to be returned
      tags:
      - lorem
      x-tags:
      - tag: lorem
components:
  schemas:
    ItemWithBoolean:
      example:
        name: name
        active: true
        id: 0
      properties:
        id:
          format: int32
          type: integer
        active:
          type: boolean
        name:
          type: string
      type: object
    LongModel:
      example:
        Long2: 6
        Long1: 0
      properties:
        Long1:
          format: int64
          type: integer
        Long2:
          format: int64
          type: integer
      type: object
    LongProperty:
      format: int64
      type: integer
    EnumInArrayOfArray:
      example:
        p1:
        - valA
        - valA
        p2:
        - - val1
          - val1
        - - val1
          - val1
        p3:
        - - - lorem
            - lorem
          - - lorem
            - lorem
        - - - lorem
            - lorem
          - - lorem
            - lorem
      properties:
        p1:
          items:
            enum:
            - valA
            - valB
            - valC
            type: string
          type: array
        p2:
          items:
            items:
              enum:
              - val1
              - val2
              - val3
              type: string
            type: array
          type: array
        p3:
          items:
            items:
              items:
                enum:
                - lorem
                - ipsum
                type: string
                x-enum-varnames:
                - LOREM_ENUM_VALUE
                - IPSUM_ENUM_VALUE
                x-enum-descriptions:
                - This is a lorem
                - This is a ipsum
              type: array
            type: array
          type: array
      type: object
    ObjWithEnums:
      example: {}
      properties:
        IProp:
          $ref: '#/components/schemas/IntEnum'
        LProp:
          $ref: '#/components/schemas/LongEnum'
        SProp:
          $ref: '#/components/schemas/StringEnum'
        SProp2:
          $ref: '#/components/schemas/String2Enum'
      type: object
    IntEnum:
      enum:
      - 1
      - 2
      - 3
      format: int32
      type: integer
    Int2Enum:
      default: 2
      enum:
      - 1
      - 2
      - 3
      format: int32
      type: integer
    LongEnum:
      enum:
      - 20
      - 30
      - 40
      format: int64
      type: integer
    Long2Enum:
      default: 30
      enum:
      - 20
      - 30
      - 40
      format: int64
      type: integer
    StringEnum:
      enum:
      - c
      - b
      - a
      type: string
    String2Enum:
      default: b
      enum:
      - c
      - b
      - a
      type: string
    EnumWithCustomName:
      enum:
      - 1
      - 2
      format: int32
      type: integer
      x-enum-varnames:
      - FOO
      - BAR
    Enum2WithCustomName:
      default: 2
      enum:
      - 1
      - 2
      format: int32
      type: integer
      x-enum-varnames:
      - FOO
      - BAR
    LongEnumWithCustomName:
      enum:
      - 20
      - 30
      - 40
      format: int64
      type: integer
      x-enum-varnames:
      - TWENTY
      - THIRTY
      - FORTY
      x-enum-descriptions:
      - Twenty value
      - Thirty value
      - Forty value
    Task:
      properties:
        status:
          enum:
          - OPEN
          - CLOSED
          type: string
          x-enum-descriptions:
          - Open task status
          - Terminated task status
      type: object
    Weather:
      properties:
        type:
          enum:
          - 1
          - 2
          - 3
          format: int32
          type: integer
          x-enum-descriptions:
          - Blue sky
          - Slightly overcast
          - Take an umbrella with you
          x-enum-varnames:
          - Sunny
          - Cloudy
          - Rainy
      type: object
    SomeObject:
      example:
        firstName: firstName
        lastName: lastName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        firstName:
          type: string
        lastName:
          type: string
      type: object
    ErrorModel:
      properties:
        statusCode:
          description: http status code
          format: int32
          type: integer
        statusDescription:
          description: http status reason phrase
          type: string
        errorMessage:
          description: error description
          type: string
      type: object
    Element:
      discriminator:
        propertyName: type
      properties:
        id:
          type: string
        type:
          type: string
      required:
      - type
      type: object
    Node:
      allOf:
      - $ref: '#/components/schemas/Element'
      - properties:
          childrenIds:
            items:
              type: string
            type: array
        type: object
    Leave:
      allOf:
      - $ref: '#/components/schemas/Element'
      - properties:
          value:
            type: string
        type: object
