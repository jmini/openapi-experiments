openapi: 3.0.1
info:
  title: OpenAPI Tree Pots
  description: Example spec
  version: 1.0.0
servers:
  - url: 'http://api.company.xyz/v2'
paths:
  /case1:
    get:
      summary: Update an existing pet
      operationId: getCase1
      tags:
        - lorem
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWithBoolean'
  /issue7754:
    get:
      summary: Codegen
      operationId: issue7754
      tags:
        - lorem
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongModel'
  /pull66:
    get:
      operationId: pull66
      tags:
        - lorem
      requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumInArrayOfArray'
      responses:
        '200':
          description: Ok
  /pull75:
    get:
      operationId: op
      tags:
        - lorem
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjWithEnums'
components:
  schemas:
    ItemWithBoolean:
      type: object
      properties:
        id:
          type: integer
          format: int32
        active:
          type: boolean
        name:
          type: string

    LongModel:
      type: object
      properties:
        Long1:
          $ref: "#/components/schemas/LongProperty"
        Long2:
          type: integer
          format: int64

    LongProperty:
      type: integer
      format: int64

    EnumInArrayOfArray:
      type: object
      properties:
        p1:
          type: array
          items:
           type: string
           enum:
             - valA
             - valB
             - valC
        p2:
          type: array
          items:
            type: array
            items:
              type: string
              enum:
                - val1
                - val2
                - val3
        p3:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: string
                enum:
                  - lorem
                  - ipsum

    ObjWithEnums:
      type: object
      properties:
        IProp:
            $ref: "#/components/schemas/IntEnum"
        LProp:
            $ref: "#/components/schemas/LongEnum"
        SProp:
            $ref: "#/components/schemas/StringEnum"

    IntEnum:
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3

    LongEnum:
      type: integer
      format: int64
      enum:
        - 20
        - 30
        - 40

    StringEnum:
      type: string
      enum:
        - "c"
        - "b"
        - "a"
